name: Playwright Tests
on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    env:
      # Add any environment variables needed for your application
      NODE_ENV: test
      # DATABASE_URL: mongodb://localhost:27017/test
      # Add other env variables as needed

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: "npm"

      # Install dependencies for all services
      - name: Install dependencies (Root)
        run: npm ci

      - name: Install dependencies (Server)
        run: npm ci
        working-directory: ./server

      - name: Install dependencies (Client)
        run: npm ci
        working-directory: ./client

      - name: Install dependencies (WebSocket)
        run: npm ci
        working-directory: ./websocket

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
        working-directory: ./client

      # Build services if needed
      - name: Build server
        run: npm run build
        working-directory: ./server

      - name: Build websocket service
        run: npm run build
        working-directory: ./websocket

      # Start MongoDB (if needed)
      # - name: Start MongoDB
      #   uses: supercharge/mongodb-github-action@1.10.0
      #   with:
      #     mongodb-version: "6.0"

      # Start all services in correct order with health checks
      - name: Start backend services
        run: |
          echo "Starting server..."
          npm --prefix ./server start &

          # Wait for server to be ready
          npx wait-on http://localhost:5000/api/health -t 60000

          echo "Starting websocket service..."
          npm --prefix ./websocket start &

          # Wait for websocket to be ready
          npx wait-on tcp:3001 -t 60000

          echo "All backend services started"

      - name: Start frontend and run tests
        run: |
          echo "Starting frontend..."
          npm --prefix ./client run dev &

          # Wait for frontend to be ready
          npx wait-on http://localhost:3000 -t 60000

          echo "Frontend ready, running tests..."
          cd ./client && npx playwright test

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: ./client/playwright-report/
          retention-days: 30
